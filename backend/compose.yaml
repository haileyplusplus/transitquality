# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    volumes:
      - type: volume
        source: transit-data
        target: /transit
      - type: bind
        source: ~/transit/bustracker/raw
        target: /transitdata
    build:
      context: ..
      dockerfile: backend/Dockerfile
    ports:
      - 8002:8000
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    environment:
      - TRACKERWRITE=$TRACKERWRITE
      - BUCKET=$BUCKET
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_DB=busscrapestate
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    secrets:
      - db-password
      - bus_api_key
      - train_api_key
      #- cloud-credentials
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      db:
       condition: service_healthy
    #networks:
    #  - transitquality
  db:
     image: postgres
     restart: always
     user: postgres
     secrets:
       - db-password
     volumes:
       - db-data:/var/lib/postgresql/data
     #networks:
     #  - transitquality
     environment:
       - POSTGRES_SERVER=db
       - POSTGRES_DB=busscrapestate
       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
     ports:
       - 5432:5432
     healthcheck:
       test: [ "CMD", "pg_isready" ]
       interval: 10s
       timeout: 5s
       retries: 5
volumes:
 transit-data:
 db-data:
secrets:
 db-password:
   file: ../db/password.txt
 bus_api_key:
   file: ~/.config/cta/bus_api_key
 train_api_key:
   file: ~/.config/cta/train_api_key
